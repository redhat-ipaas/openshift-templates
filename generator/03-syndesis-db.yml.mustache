- apiVersion: v1
  kind: Service
  metadata:
    name: syndesis-db
    labels:
      app: syndesis
      component: syndesis-db
  spec:
    ports:
    - name: postgresql
      nodePort: 0
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: syndesis
      component: syndesis-db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
{{^Ephemeral}}
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: syndesis-db
    labels:
      app: syndesis
      component: syndesis-db
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${POSTGRESQL_VOLUME_CAPACITY}
{{/Ephemeral}}    
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: syndesis-db
    labels:
      app: syndesis
      component: syndesis-db
  spec:
    replicas: 1
    selector:
      app: syndesis
      component: syndesis-db
    strategy:
      type: Recreate
      resources:
        limits:
          cpu: "100m"
          memory: "256Mi"
    template:
      metadata:
        labels:
          app: syndesis
          component: syndesis-db
      spec:
        containers:
        - capabilities: {}
          env:
          - name: POSTGRESQL_USER
            value: ${POSTGRESQL_USER}
          - name: POSTGRESQL_PASSWORD
            value: ${POSTGRESQL_PASSWORD}
          - name: POSTGRESQL_DATABASE
            value: ${POSTGRESQL_DATABASE}
          image: ' '
          imagePullPolicy: IfNotPresent
          livenessProbe:
            initialDelaySeconds: 60
            tcpSocket:
              port: 5432
          name: postgresql
          ports:
          - containerPort: 5432
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - psql -h 127.0.0.1 -U $POSTGRESQL_USER -q -d $POSTGRESQL_DATABASE -c 'SELECT 1'
            initialDelaySeconds: 5
          resources:
            limits:
              memory: ${POSTGRESQL_MEMORY_LIMIT}
{{^Ephemeral}}
          volumeMounts:
          - mountPath: /var/lib/pgsql/data
            name: syndesis-db-data
        volumes:
        - name: syndesis-db-data
          persistentVolumeClaim:
            claimName: syndesis-db
{{/Ephemeral}}
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          name: postgresql:9.5
          namespace: ${POSTGRESQL_IMAGE_STREAM_NAMESPACE}
      type: ImageChange
    - type: ConfigChange
